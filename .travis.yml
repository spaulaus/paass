notifications:
  email:
    on_success: change
    on_failure: always
env:
  global:
    - MAKEFLAGS="-j 8"
language: cpp
sudo: required

matrix:
  include:
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
        - gsl-bin
        - libgsl-dev
        - libncurses5-dev
        - libroot*
        - python3
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - BUILD_OPTIONS="-DPAASS_BUILD_TESTS=ON -DPAASS_BUILD_UTKSCAN=ON -DPAASS_BUILD_ROOT_SCANNER=OFF -DPAASS_BUILD_SETUP=ON"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
        - gsl-bin
        - libgsl-dev
        - libncurses5-dev
        - libroot*
        - python3
    env:
    - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    - BUILD_OPTIONS="-DPAASS_BUILD_TESTS=ON -DPAASS_BUILD_UTKSCAN=ON -DPAASS_BUILD_ROOT_SCANNER=OFF -DPAASS_BUILD_SETUP=ON"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
        - gsl-bin
        - libgsl-dev
        - libncurses5-dev
        - libroot*
        - python3
    env:
    - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - BUILD_OPTIONS="-DPAASS_BUILD_TESTS=ON -DPAASS_BUILD_UTKSCAN=ON -DPAASS_BUILD_ROOT_SCANNER=OFF -DPAASS_BUILD_SETUP=ON"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - gsl-bin
        - libgsl-dev
        - libncurses5-dev
        - libroot*
        - python3
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - BUILD_OPTIONS="-DPAASS_BUILD_TESTS=ON -DPAASS_BUILD_UTKSCAN=ON -DPAASS_BUILD_ROOT_SCANNER=OFF -DPAASS_BUILD_SETUP=ON"

before_install:
  - sudo apt-get -qq update --install-suggests
  - eval "${MATRIX_EVAL}"
  - export ORIG_DIR=$PWD
  - git clone https://github.com/unittest-cpp/unittest-cpp.git && cd unittest-cpp/builds/
  - cmake ../ && sudo make install && cd $ORIG_DIR
  - mkdir -p /opt/plx/ && cd /opt/plx
  - git clone https://github.com/spaulaus/plx-api.git && ln -s plx-api current && cd plx-api
  - export PLX_SDK_DIR=$PWD && make all && cd $ORIG_DIR
  - git clone https://github.com/spaulaus/xia-api.git && cd xia-api
  - sudo python3 waf configure build install --prefix=/opt && cd $ORIG_DIR
  - ln -s /opt/xia/api /opt/xia/current

script:
  - mkdir paass-build && cd paass-build
  - cmake ../ ${BUILD_OPTIONS} && make -j8 && ctest -j8
